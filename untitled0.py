# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YUsROlLAmW4whFATDbiYfOrIRpMGBYIc
"""

import numpy as np # 慣例的にnpとする

# 標準のリストをndarrayに変換
data = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])
print(data)

data = np.array([
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9]
])
print(data)

# 要素数10の未初期化ndarrayを作成
data = np.empty(10)
print(data)

# 2×3の未初期化ndarrayを作成
data = np.empty((2, 3)) # np.empty([2, 3])
print(data)

# 要素数10の0で初期化されたndarrayを作成
data = np.zeros(10)
print(data)

# 2×3の0で初期化されたndarrayを作成
data = np.zeros((2, 3)) # np.zeros([2, 3])
print(data)

# 要素数10の1で初期化されたndarrayを作成
data = np.ones(10)
print(data)

# 2×3の1で初期化されたndarrayを作成
data = np.ones((2, 3)) # np.ones([2, 3])
print(data)

# 要素数10の5で初期化されたndarrayを作成
data = np.full(10, 5)
print(data)

# 2×3の5で初期化されたndarrayを作成
data = np.full((2, 3), 5)
print(data)

# 0〜9のndarrayを作成
data = np.arange(10)
print(data)

# 1〜10のndarrayを作成
data = np.arange(1, 11)
print(data)

# 1〜10まで2刻みのndarrayを作成
data = np.arange(1, 10, 2)
print(data)

# 10〜1まで降順のndarrayを作成
data = np.arange(10, 0, -1)
print(data)

# np.linspace(最初の数値, 最後の数値, 要素数)

# 0～10まで5個の要素を等間隔配置でndarrayを作成
data = np.linspace(0, 10, 5)
print(data)

# 20～10まで3個の要素を等間隔配置でndarrayを作成
data = np.linspace(20, 10, 3)
print(data)

# シード値の設定（固定乱数列にしたい場合のみ）
np.random.seed(123)

# [0.0, 1.0)の一様分布に従う要素数10のndarrayを作成
data = np.random.rand(10)
print(data)

# [0.0, 1.0)の一様分布に従う2×3のndarrayを作成
data = np.random.rand(2, 3)
print(data)

# [0.0, 1.0)の一様分布に従う2×3のndarrayを作成
data = np.random.random_sample((2, 3))
print(data)

# [0, 10)の一様分布に従う2×3のndarrayを作成
data = np.random.randint(0, 10, (2, 3))
print(data)

# 平均60、標準偏差20の正規分布に従う要素数10のndarrayを作成
data = np.random.normal(60, 20, 10)
print(data)

# 平均60、標準偏差20の正規分布に従う2×3のndarrayを作成
data = np.random.normal(60, 20, (2, 3))
print(data)

x = np.array([2, 4, 6, 8, 10])
y = np.array([1, 3, 5, 7, 9])

# ndarray同士の演算は、shapeが同一であれば対応する要素ごとに適用される
print(x + y)
print(x - y)
print(x * y)
print(x / y)
print(x ** y)
print(x // y)

# ndarrayと単一の値の演算は、全ての要素に対して適用される
print(x + 10)
print(x - 1)
print(x * 2)
print(x / 2)
print(x < 3)
print(x >= 3)

x = np.array([0, 1, 2, 3, 4, 5])
x = [0]
print(x)

x = np.array([0, 1, 2, 3, 4, 5])
x[0]

x = np.array([0, 1, 2, 3, 4, 5])
x

x = np.array([0, 1, 2, 3, 4, 5])
x[0] = 10
print(x)

print(x[2:5])

x[0:3] = 20
print(x)

x = np.array(0, 1, 2, 3, 4, 5)

x = np.array([3, 1, 4, 0, 2, 5])
print(x < 3)

